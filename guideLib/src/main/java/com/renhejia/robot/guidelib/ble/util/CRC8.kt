package com.renhejia.robot.guidelib.ble.util


/**
 * CRC8相关计算
 * encode: utf-8
 */
object CRC8 {
    var crc8_tab: ByteArray = byteArrayOf(
        0.toByte(),
        94.toByte(),
        188.toByte(),
        226.toByte(),
        97.toByte(),
        63.toByte(),
        221.toByte(),
        131.toByte(),
        194.toByte(),
        156.toByte(),
        126.toByte(),
        32.toByte(),
        163.toByte(),
        253.toByte(),
        31.toByte(),
        65.toByte(),
        157.toByte(),
        195.toByte(),
        33.toByte(),
        127.toByte(),
        252.toByte(),
        162.toByte(),
        64.toByte(),
        30.toByte(),
        95.toByte(),
        1.toByte(),
        227.toByte(),
        189.toByte(),
        62.toByte(),
        96.toByte(),
        130.toByte(),
        220.toByte(),
        35.toByte(),
        125.toByte(),
        159.toByte(),
        193.toByte(),
        66.toByte(),
        28.toByte(),
        254.toByte(),
        160.toByte(),
        225.toByte(),
        191.toByte(),
        93.toByte(),
        3.toByte(),
        128.toByte(),
        222.toByte(),
        60.toByte(),
        98.toByte(),
        190.toByte(),
        224.toByte(),
        2.toByte(),
        92.toByte(),
        223.toByte(),
        129.toByte(),
        99.toByte(),
        61.toByte(),
        124.toByte(),
        34.toByte(),
        192.toByte(),
        158.toByte(),
        29.toByte(),
        67.toByte(),
        161.toByte(),
        255.toByte(),
        70.toByte(),
        24.toByte(),
        250.toByte(),
        164.toByte(),
        39.toByte(),
        121.toByte(),
        155.toByte(),
        197.toByte(),
        132.toByte(),
        218.toByte(),
        56.toByte(),
        102.toByte(),
        229.toByte(),
        187.toByte(),
        89.toByte(),
        7.toByte(),
        219.toByte(),
        133.toByte(),
        103.toByte(),
        57.toByte(),
        186.toByte(),
        228.toByte(),
        6.toByte(),
        88.toByte(),
        25.toByte(),
        71.toByte(),
        165.toByte(),
        251.toByte(),
        120.toByte(),
        38.toByte(),
        196.toByte(),
        154.toByte(),
        101.toByte(),
        59.toByte(),
        217.toByte(),
        135.toByte(),
        4.toByte(),
        90.toByte(),
        184.toByte(),
        230.toByte(),
        167.toByte(),
        249.toByte(),
        27.toByte(),
        69.toByte(),
        198.toByte(),
        152.toByte(),
        122.toByte(),
        36.toByte(),
        248.toByte(),
        166.toByte(),
        68.toByte(),
        26.toByte(),
        153.toByte(),
        199.toByte(),
        37.toByte(),
        123.toByte(),
        58.toByte(),
        100.toByte(),
        134.toByte(),
        216.toByte(),
        91.toByte(),
        5.toByte(),
        231.toByte(),
        185.toByte(),
        140.toByte(),
        210.toByte(),
        48.toByte(),
        110.toByte(),
        237.toByte(),
        179.toByte(),
        81.toByte(),
        15.toByte(),
        78.toByte(),
        16.toByte(),
        242.toByte(),
        172.toByte(),
        47.toByte(),
        113.toByte(),
        147.toByte(),
        205.toByte(),
        17.toByte(),
        79.toByte(),
        173.toByte(),
        243.toByte(),
        112.toByte(),
        46.toByte(),
        204.toByte(),
        146.toByte(),
        211.toByte(),
        141.toByte(),
        111.toByte(),
        49.toByte(),
        178.toByte(),
        236.toByte(),
        14.toByte(),
        80.toByte(),
        175.toByte(),
        241.toByte(),
        19.toByte(),
        77.toByte(),
        206.toByte(),
        144.toByte(),
        114.toByte(),
        44.toByte(),
        109.toByte(),
        51.toByte(),
        209.toByte(),
        143.toByte(),
        12.toByte(),
        82.toByte(),
        176.toByte(),
        238.toByte(),
        50.toByte(),
        108.toByte(),
        142.toByte(),
        208.toByte(),
        83.toByte(),
        13.toByte(),
        239.toByte(),
        177.toByte(),
        240.toByte(),
        174.toByte(),
        76.toByte(),
        18.toByte(),
        145.toByte(),
        207.toByte(),
        45.toByte(),
        115.toByte(),
        202.toByte(),
        148.toByte(),
        118.toByte(),
        40.toByte(),
        171.toByte(),
        245.toByte(),
        23.toByte(),
        73.toByte(),
        8.toByte(),
        86.toByte(),
        180.toByte(),
        234.toByte(),
        105.toByte(),
        55.toByte(),
        213.toByte(),
        139.toByte(),
        87.toByte(),
        9.toByte(),
        235.toByte(),
        181.toByte(),
        54.toByte(),
        104.toByte(),
        138.toByte(),
        212.toByte(),
        149.toByte(),
        203.toByte(),
        41.toByte(),
        119.toByte(),
        244.toByte(),
        170.toByte(),
        72.toByte(),
        22.toByte(),
        233.toByte(),
        183.toByte(),
        85.toByte(),
        11.toByte(),
        136.toByte(),
        214.toByte(),
        52.toByte(),
        106.toByte(),
        43.toByte(),
        117.toByte(),
        151.toByte(),
        201.toByte(),
        74.toByte(),
        20.toByte(),
        246.toByte(),
        168.toByte(),
        116.toByte(),
        42.toByte(),
        200.toByte(),
        150.toByte(),
        21.toByte(),
        75.toByte(),
        169.toByte(),
        247.toByte(),
        182.toByte(),
        232.toByte(),
        10.toByte(),
        84.toByte(),
        215.toByte(),
        137.toByte(),
        107.toByte(),
        53
    )

    /**
     * 计算数组的CRC8校验值
     * @param data 需要计算的数组
     * @return     CRC8校验值
     */
    fun calcCrc8Str(data: ByteArray): String {
        return IntByteStringHexUtil.intToHexStr(
            0x00ff and calcCrc8(
                data,
                0,
                data.size,
                0.toByte()
            ).toInt()
        )
    }
    /**
     * 计算CRC8校验值
     * @param data    数据
     * @param offset  起始位置
     * @param len     长度
     * @param preval  之前的校验值
     * @return        校验值
     */
    /**
     * 计算数组的CRC8校验值
     * @param data 需要计算的数组
     * @return     CRC8校验值
     */
    /**
     * 计算CRC8校验值
     * @param data     数据
     * @param offset   起始位置
     * @param len      长度
     * @return         校验值
     */
    @JvmOverloads
    fun calcCrc8(
        data: ByteArray,
        offset: Int = 0,
        len: Int = data.size,
        preval: Byte = 0.toByte()
    ): Byte {
        var ret = preval
        for (i in offset until (offset + len)) {
            ret = crc8_tab[(0x00ff and (ret.toInt() xor data[i].toInt()))]
        }
        return ret
    }

    // 测试
    @JvmStatic
    fun main(args: Array<String>) {
        val crc = calcCrc8(byteArrayOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
        println("" + Integer.toHexString(0x00ff and crc.toInt()))
    }
}
